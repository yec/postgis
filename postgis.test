<?php
class PostgisValidationsTestCase extends DrupalUnitTestCase {
  public static function getInfo(){
    return array(
      'name' => 'Geometry Validations',
      'description' => 'Verifies geometry validating functions work correctly',
      'group' => 'PostGIS'
    );
  }

  public function testPostgisGeometrySetValidation(){
    $set = new PostgisGeometrySet('point', 4236);
    $result = $set->validate();
    $this->assertTrue($result === NULL, 'An empty set should be valid');

    $set->fromText('POINT(9 48)');
    $result = $set->validate();
    $this->assertTrue($result === NULL, 'A valid point should be seen as valid');

    $set->fromText('LINESTRING(10 5, 12 14)');
    $result = $set->validate();
    $this->assertTrue(is_array($result), 'An validation error should arise since types mismatch');
    $this->assertTrue(array_key_exists('error', $result), 'Error key is provided');
    $this->assertTrue($result['error'] === 'postgis_typemismatch', 'Geometries were correctly parsed but it was detected that their types mismatch.');
  }

  public function testPostgisGeometrySetParseError(){
    $set = new PostgisGeometrySet('point', 4236);
    $set->fromText('POINT(9 48)');
    $set->fromText('POINT(11.4 15.8)');
    $result = $set->validate();
    $this->assertTrue($result === NULL, 'Valid geometries should be seen as valid');

    $set->fromText('POINT(15)');
    $result = $set->validate();
    $this->assertTrue($result['error'] === 'postgis_unparsable', 'Point with wrong data should result in parse errors.');
  }
}